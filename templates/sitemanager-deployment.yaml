{{- if $.Values.sitemanager.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "maira.sitemanager.fullname" . }}
  labels:
{{ include "maira.sitemanager.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.sitemanager.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "maira.sitemanager.fullname" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "maira.sitemanager.fullname" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ . }}
    {{- end }}
      serviceAccountName: {{ template "maira.serviceAccountName" . }}
      containers:
      - name:  sitemanager
        image: "{{ .Values.sitemanager.image.repository }}:{{ .Values.sitemanager.image.tag }}"
        command: ["/site-manager"]
        args: ["-c", "/config/config.yml"]
        volumeMounts:
        - name: config-yml
          mountPath: "/config"
          readOnly: true
        {{- if .Values.tls.enabled }}
        - name: tls-cert
          mountPath: "/certs"
          readOnly: true
        {{- if .Values.tls.gcp.key_secret_name }}
        # This is needed to sync the k8s secret with gcp secrets
        - name: tls-gcp-secret
          mountPath: "/var/tls-gcp-secret"
          readOnly: true
        {{- end }}
        {{- end }}
      volumes:
      - name: config-yml
        configMap:
          name: {{ template "maira.sitemanager.fullname" . }}-config
      {{- if .Values.tls.enabled }}
      - name: tls-cert
        secret:
          secretName: "{{ if .Values.tls.existingSecret }}{{ .Values.tls.existingSecret }}{{ else }}{{ template "maira.fullname" . }}-tls-secret{{ end }}"
          items:
            - key: tls.key
              path: server.key
            - key: tls.crt
              path: server.crt
      {{- if .Values.tls.gcp.key_secret_name }}
      # This is needed to sync the k8s secret with gcp secrets
      - name: tls-gcp-secret
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ template "maira.fullname" . }}-tls-secretprovider
      {{- end }}
      {{- end }}
{{- end }}
