nameOverride: ""
fullnameOverride: ""
imagePullSecrets: "macro-context-293714"

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000


nodeSelector: {}

tolerations: []

affinity: {}
gcp:
  # GCP Project ID should be provided
  # project_id:

  # GCP Service Account
  # service_account:

temporal:
  host: temporaltest-frontend
  port: 7233
  enabled: false

mongodb:
  # Either credential details like host, username, password or gcp.db_uri_secret_name
  # must be provided
  #
  # host: cluster0.aq7of.mongodb.net
  # username: maira
  # password:
  host:
  username:
  password:
  # Existing secret with MongoDB credentials secret name coming from sealedSecrets, eg. mongodb-secret
  existingSecret: maira-db-uri-secret
  gcp:
    db_uri_secret_name: 

tls:
  enabled: true
  # Either gcp.key_secret_name and gcp.cert_secret_name
  # OR key and cert must be provided
  gcp:
    # *secret_name are the secret names defined in GCP secret manager
    # key_secret_name -  tls key secret name
    # cert_secret_name - tls cert secret name
    key_secret_name:
    cert_secret_name:
  # Existing secret with tls crt and key secret name coming from sealedSecrets, eg. maira-tls-secret
  existingSecret: maira-tls-secret
  # tls key and cert content
  key:
  cert:
api:
  enabled: true
  replicaCount: 1
  apiPort: 11000
  grpcPort: 8000
  auth:
    enabled: true
  auth0_tenant: maira-dev
  image:
    repository: gcr.io/macro-context-293714/maira-apiserver
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    servicePort: 443
  ingress:
    enabled: false
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths: []

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

slack:
  bot_server: api.demo.maira.io:443
  slack_client_id: ""
  slack_oauth_key: ""
  slack_signing_secret: ""
  socket_mode: false
  slack_bot_token: ""
  slack_app_token: ""
  log_level: info

cloud_worker:
  enabled: true
  temporal:
    namespace:
      name: default
      # retention cannot be more than 30 days
      retention: 30d
      createIfNotPresent: true
      image:
        repository: temporalio/admin-tools
        tag: 1.13.1
        pullPolicy: IfNotPresent
  replicaCount: 1
  image:
    repository: gcr.io/macro-context-293714/maira-cloud-worker
    tag: latest
    pullPolicy: IfNotPresent
  confirmation_url: https://demo.maira.io/confirmation
  email_template_id: d-09e71fe13d354a90aedf1bb8e733d8c7
  email:
    password: ""
  auth:
    #url: https://maira-dev.us.auth0.com/oauth/token
    url: ""
    client_id: ""
    client_secret: ""
    # audience: "https://api.maira-dev.maira.io/cloudWorker"
    audience: ""

testapp:
  enabled: true
  replicaCount: 1
  image:
    repository: gcr.io/macro-context-293714/hello-python
    tag: latest
    pullPolicy: IfNotPresent
  containerPort: 5000
  service:
    type: LoadBalancer
    servicePort: 5000

ui:
  enabled: true
  image:
    repository: gcr.io/macro-context-293714/maira-ui
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    servicePort: 443
    httpPort: 80

sitemanager:
  enabled: true
  replicaCount: 1
  apiPort: 11000
  grpcPort: 8000
  image:
    repository: gcr.io/macro-context-293714/site-manager
    tag: latest
    pullPolicy: IfNotPresent
  service:
    type: LoadBalancer
    servicePort: 443
  auth:
    url: ""
    client_id: ""
    client_secret: ""
    audience: ""
